buildscript {
    repositories {
        mavenLocal()
        //添加maven仓库 mybatis-generetor
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        // mybatis-generator 插件路径mybatis-generetor
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
    }
}


plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'idea'
}


group = 'com.alpha'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

apply plugin: "com.arenagod.gradle.MybatisGenerator"

mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/mybatis/generatorConfig.xml'
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    compile group: 'org.springframework.session', name: 'spring-session-data-redis'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.1.RELEASE'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.2.13'
    compile group: 'com.alibaba' , name: 'druid-spring-boot-starter' , version : '1.1.23'
    compileOnly 'org.projectlombok:lombok'
    //developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.jodconverter', name: 'jodconverter-spring-boot-starter', version: '4.3.0'
    compile group: 'org.jodconverter', name: 'jodconverter-core', version: '4.3.0'
    compile group: 'org.jodconverter', name: 'jodconverter-local', version: '4.3.0'
    compile group: 'cn.hutool', name: 'hutool-all', version: '5.4.7'
    compile group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '4.5.14'

//    compile group: 'org.libreoffice', name: 'unoil', version: '6.4.3'
//
//    compile group: 'org.libreoffice', name: 'juh', version: '6.4.3'
//
//    compile group: 'org.libreoffice', name: 'ridl', version: '6.4.3'
//
//    compile group: 'org.libreoffice', name: 'jurt', version: '6.4.3'
}

test {
    useJUnitPlatform()
}
